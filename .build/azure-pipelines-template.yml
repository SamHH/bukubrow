jobs:
- job: ${{ parameters.name }}
  pool:
      vmImage: ${{ parameters.vmImage }}
  strategy:
      matrix:
          stable:
              rustup_toolchain: stable
          beta:
              rustup_toolchain: beta
          nightly:
              rustup_toolchain: nightly
  steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install Rust
  - script: |
      rustc -Vv
      cargo -V
    displayName: Query Rust and Cargo versions
  - ${{ if eq(parameters.name, 'Linux') }}:
    - script: make binary-linux-x64
      displayName: Build binary (Linux)
    - script: pwd && ls
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'artifactName'
        targetPath: 'release/binary-linux-x64.zip'
  - ${{ if eq(parameters.name, 'macOS') }}:
    - script: make binary-darwin-x64
      displayName: Build binary (macOS)
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'artifactName'
        targetPath: 'release/binary-darwin-x64.zip'
